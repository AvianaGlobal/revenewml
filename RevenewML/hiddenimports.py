hiddenimports = [
    'cython',
    'dask',
    'ipython',
    'matplotlib',
    'numpy',
    'pyodbc',
    'pywin32',
    'scipy',
    'scipy.special.cython_special',
    'sklearn.utils._cython_blas',
    'sklearn.neighbors.typedefs',
    'sklearn.neighbors.quad_tree',
    'sklearn.tree._utils',
    'xgboost',
    'xgboost.callback',
    'xgboost.plotting',
    'xgboost.training',
    'xgboost.core',
    'xgboost.libpath',
    'xgboost.compat',
    'xgboost.rabit',
    'xgboost.sklearn',
    'shap.explainers.deep.deep_pytorch',
    'shap.plots.monitoring',
    'shap.explainers.other.random',
    'shap.explainers.sampling',
    'shap.explainers.other',
    'shap.explainers.linear',
    'shap.explainers.other.coefficent',
    'shap.plots.summary',
    'shap.plots.colors',
    'shap.benchmark.plots',
    'shap.common',
    'shap',
    'shap.explainers',
    'shap.explainers.explainer',
    'shap.explainers.other.treegain',
    'shap.datasets',
    'shap.explainers.deep',
    'shap.benchmark.experiments',
    'shap.explainers.deep.deep_tf',
    'shap.explainers.pytree',
    'shap._cext',
    'shap.benchmark.measures',
    'shap.plots',
    'shap.benchmark',
    'shap.explainers.other.lime',
    'shap.plots.dependence',
    'shap.plots.force_matplotlib',
    'shap.benchmark.metrics',
    'shap.plots.embedding',
    'shap.plots.image',
    'shap.explainers.tree',
    'shap.benchmark.models',
    'shap.explainers.gradient',
    'shap.benchmark.methods',
    'shap.explainers.kernel',
    'shap.plots.force',
    'shap.explainers.mimic',
    'IPython',
    'numpy',
    'scipy',
    'matplotlib',
    'tqdm',
    'pandas'
]
